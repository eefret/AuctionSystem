package com.kaissersoft.app.auctionsystem.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.kaissersoft.app.auctionsystem.greendao.User;
import com.kaissersoft.app.auctionsystem.greendao.Item;
import com.kaissersoft.app.auctionsystem.greendao.Bid;

import com.kaissersoft.app.auctionsystem.greendao.UserDao;
import com.kaissersoft.app.auctionsystem.greendao.ItemDao;
import com.kaissersoft.app.auctionsystem.greendao.BidDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig itemDaoConfig;
    private final DaoConfig bidDaoConfig;

    private final UserDao userDao;
    private final ItemDao itemDao;
    private final BidDao bidDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        itemDaoConfig = daoConfigMap.get(ItemDao.class).clone();
        itemDaoConfig.initIdentityScope(type);

        bidDaoConfig = daoConfigMap.get(BidDao.class).clone();
        bidDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        itemDao = new ItemDao(itemDaoConfig, this);
        bidDao = new BidDao(bidDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Item.class, itemDao);
        registerDao(Bid.class, bidDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        itemDaoConfig.getIdentityScope().clear();
        bidDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ItemDao getItemDao() {
        return itemDao;
    }

    public BidDao getBidDao() {
        return bidDao;
    }

}
